const app = getApp();
const tools = app.tools;

Page({

  /**
   * 页面的初始数据
   */
  data: {
    deviceList: [],
    deviceNo: '2019092909194341',
    payType: 1,
    show: false,
    form: '',
    payList: [{
        title: "钱包支付",
        icon: "/images/bag.png",
        type: 1
      },
      {
        title: "微信支付",
        icon: "/images/wxpay.png",
        type: 2
      },
    ],
    result: "1",
    login_status: false,
    extendCode:''
  },

  /**
   * 生命周期函数--监听页面加载
   */
  onLoad: function (options) {

    const url = decodeURIComponent(options.q)
    const macno = url.split("macno=")[1]
    this.setData({
      // deviceNo: macno
      extendCode: options.extendCode
    })
  },

  /**
   * 生命周期函数--监听页面初次渲染完成
   */
  onReady: function () {

  },

  /**
   * 生命周期函数--监听页面显示
   */
  onShow: function () {
    this.init();
  },

  /**
   * 生命周期函数--监听页面隐藏
   */
  onHide: function () {

  },

  /**
   * 生命周期函数--监听页面卸载
   */
  onUnload: function () {

  },

  /**
   * 页面相关事件处理函数--监听用户下拉动作
   */
  onPullDownRefresh: function () {

  },

  /**
   * 页面上拉触底事件的处理函数
   */
  onReachBottom: function () {

  },

  /**
   * 用户点击右上角分享
   */
  onShareAppMessage: function (options) {
    let userInfo = tools.getStorage("userInfo");
    if (userInfo.headImgUrl.indexOf("http") == -1) {
      userInfo.headImgUrl = tools.globalData.url + userInfo.headImgUrl
    }
    var shareObj = {
      path: '/pages/userSide/main/my/index/index?extendCode=' + userInfo.extendCode, // 默认是当前页面，必须是以‘/’开头的完整路径
      imgUrl: '/images/shareBac.png', //转发时显示的图片路径，支持网络和本地，不传则使用当前页默认截图。
      success: function (res) { // 转发成功之后的回调　　　　　
        if (res.errMsg == 'shareAppMessage:ok') {}
      },
      fail: function () { // 转发失败之后的回调
        if (res.errMsg == 'shareAppMessage:fail cancel') {
          // 用户取消转发
        } else if (res.errMsg == 'shareAppMessage:fail') {
          // 转发失败，其中 detail message 为详细失败信息
        }
      },
      complete: function () {
        // 转发结束之后的回调（转发成不成功都会执行）
      }
    };
    // 来自页面内的按钮的转发
    if (options.from == 'button') {
      var dataid = options.target.dataset; //上方data-id=shareBtn设置的值
      // 此处可以修改 shareObj 中的内容
      shareObj.path = '/pages/userSide/main/my/index/index?extendCode=' + dataid.id;
    }
    // 返回shareObj
    return shareObj;
  },

  /**
   * 初始化
   */
  init() {
    app.wxRequest(
      '/api/combo/comboListByDeviceNo', {
        deviceNo: this.data.deviceNo
      },
      res => {
        tools.hideLoading();
        if (res.data.code == 1) {
          console.log(res.data.data)
          this.setData({
            deviceList: res.data.data
          })
        } else {
          tools.showToast(res.data.msg)
        }
      }
    )
  },

  /**
   * 显示支付窗口
   */
  showPay(e) {
    const i = e.currentTarget.dataset.index;
    const message = this.data.deviceList[i]
    const form = {
      comboId: message.id,
      price: message.price,
      deviceNo: this.data.deviceNo,
    }
    this.setData({
      show: true,
      form
    })
    tools.isToken((flag) => {
      if (flag) {
        this.setData({
          login_status: false,
        })
      } else {
        this.setData({
          login_status: true
        })
      }
    });
  },

  /**
   * 支付
   */
  pay() {
    console.log("确认了要支付")
    const {
      result
    } = this.data
    this.data.form.type = result
    app.wxRequest(
      '/api/order/createOrder', this.data.form,
      res => {
        this.setData({
          show: false
        })
        tools.hideLoading();
        if (res.data.code == 1) {
          if (result == 1) {
            tools.showToast(res.data.msg);
            setTimeout(() => {
              wx.reLaunch({
                url: '/pages/userSide/main/my/order/index/index'
              })
            }, 1500);
          } else {
            wx.requestPayment({
              ...res.data.data,
              success(res) {
                tools.showToast("支付成功")
                setTimeout(() => {
                  wx.reLaunch({
                    url: '/pages/userSide/main/my/order/index/index'
                  })
                }, 1500);
              },
            })
          }
        } else {
          tools.showToast(res.data.msg);
        }
      }
    )
  },

  onChange(e) {
    console.log(e)
    this.setData({
      result: e.detail
    });
  },

  onClick(event) {
    const {
      name
    } = event.currentTarget.dataset;
    this.setData({
      result: String(name)
    });
  },

  closeWin() {
    this.setData({
      show: false,
    })
  },

  listeningEvent() {
    this.onShow()
  }

})